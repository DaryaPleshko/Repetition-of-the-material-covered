// Проверьте, является ли введенная строка пустой. Решение через: if … else, тернарный оператор.

const value = prompt(`Введите строку`);

value.length === 0 ? console.log(`Строка пустая`) : console.log(`Строка не пустая`);

// Определите, начинается ли строка с буквы "А". Решение через: if … else, тернарный оператор.

value[0].toUpperCase() === 'A' ? console.log(`Строка начинается с буквы "А"`) : console.log(`Строка не начинается с буквы "А"`);

// Определите, заканчивается ли строка на восклицательный знак "!". Решение через: if … else,
// тернарный оператор.

value[value.length - 1] === '!' ? console.log(`Строка заканчивается на "!"`) : console.log(`Строка не заканчивается на "!"`);

// Пользователь вводит свое имя. Выведите приветственное сообщение в формате: "Привет, [имя]!".
// Решение через: конкатенация, интерполяция.

const value_name = 'Sasha';
console.log(`Привет, ${value_name}!`);

// Пользователь вводит имя и фамилию. Выведите полное имя в формате: "[Имя] [Фамилия]".
// Решение через: конкатенация, интерполяция.

const value_surname = 'Petrov';
console.log(`Привет, ${value_name} ${value_surname}!`);

// Пользователь вводит строку и число n. Найдите символ в строке под индексом n. Добавьте
// проверку, чтобы убедиться, что введено число n.

const n = +prompt('Введите число n');

!isNaN(n) ? (n > 0 && n <= value.length ? console.log(`Результат: '${value[n]}'`) : console.log(`Индекс вне диапазона`))
    : console.log(`n строка, а не число`);

// Пользователь вводит строку. Выведите эту строку в консоль в двойных кавычках, используя
// экранирование. Решение через: экранирование символов.

console.log(`\"Hello, World\"`);

// На входе число от 1 до 4, указывающее время суток: 1 — утро, 2 — день, 3 — вечер, 4 — ночь.
// Выведите соответствующее название времени суток. Решение через: switch ... case.

switch (n) {
    case 1:
        console.log(`утро`);
        break;
    case 2:
        console.log(`день`);
        break;
    case 3:
        console.log(`вечер`);
        break;
    case 4:
        console.log(`ночь`);
        break;
    default:
        console.log(`Число не в диапазоне 1-4`);
        break;
}

// Пользователь вводит одно из названий домашних животных: "собака", "кошка", "попугай", "рыбка".
// Выведите соответствующий тип животного: "Млекопитающее", "Млекопитающее", "Птица", "Рыба".
// Решение через: switch ... case.

const home_pets = `собака`;

switch (home_pets) {
    case 'собака':
    case 'кошка':
        console.log(`Млекопитающее`);
        break;
    case 'попугай':
        console.log(`Птица`);
        break;
    case 'рыбка':
        console.log(`Рыба`);
        break;
    default:
        console.log(`Введите соответствующий тип животного`);
        break;
}

// Пользователь вводит два числа. Определите, какое из них больше. Если числа равны, верните
// "Равны". Решение через: тернарный оператор.

const val_FIR = 4;
const val_SEC = 6;

val_FIR !== val_SEC ? (val_FIR > val_SEC ? console.log(`${val_FIR} > ${val_SEC}`) : console.log(`${val_FIR} < ${val_SEC}`))
    : console.log('Результат: "Равны"');

// Пользователь вводит число и ещё одно число для проверки кратности. Определите, кратно ли
// первое число второму. Если да — верните "Кратно", если нет — "Не кратно". Решение через:
// тернарный оператор.

val_FIR % val_SEC === 0 ? console.log(`Результат: "Кратно"`) : console.log(`Результат: "Не кратно"`);

// Пользователь вводит число. Определите, лежит ли оно в диапазоне от 10 до 20 включительно. Если
// да — верните "В диапазоне", если нет — "Вне диапазона". Для вывода данных в консоль
// использовать интерполяцию.

val_FIR >= 10 && val_FIR <= 20 ? console.log(`Число ${val_FIR} находится в диапазоне от 10 до 20`) : console.log(`Число ${val_FIR} не находится в диапазоне от 10 до 20`);

// Пользователь вводит строку. Если первый символ строки — буква "А", выведите: "Строка '[строка]'
// начинается с буквы А.", иначе — "Строка '[строка]' не начинается с буквы А.". Решение через: if ... else,
// интерполяцию.

value[0] === 'A' ? console.log(`Строка '${value}' начинается с буквы А.`) : console.log(`Строка '${value}' не начинается с буквы А.`);

// Пользователь вводит строку. Определите, число это или строка. Если число, выясните, четное оно
// или нет. Если строка, преобразуйте ее в массив символов.

const val_for_array = prompt('Введите строку');

!isNaN(val_for_array) ? (val_for_array % 2 === 0 ? console.log(`Вы ввели число ${val_for_array} - четное`) : console.log(`Вы ввели число ${val_for_array} - нечетное`))
    : console.log(`Вы ввели строку. Результат: ${val_for_array.split('')}`);

// Преобразуйте строку ' Full StaCK DevELoper ' в массив вида ['full', 'stack', 'developer].

console.log(`Результат: ${val_for_array.split(' ')}`);

// Пользователь вводит строку. Если это число, вывести ошибку. Если строка, узнайте длину,
// приведите к нижнему регистру и удалите пробелы.

isNaN(val_for_array) ? console.log(`Результат: ${val_for_array.toLowerCase().trim()}. Длина: ${val_for_array.length}`) : console.log(`Ошибка ввода`);

// Преобразуйте строку вида "HTML JavaScript PHP" в "HTML-JAVASCRIPT-PHP".

const str_val = 'HTML JavaScript PHP';
console.log(str_val.toUpperCase().replaceAll(' ', '-'));

// Пользователь вводит строку. Если это число, вывести ошибку. Если строка, первый символ сделать
// заглавным и удалить пробелы.

let trimmedValue = value.trim();

!isNaN(trimmedValue) && trimmedValue !== "" ? console.log("Ошибка ввода")
    : console.log(`Результат: ${trimmedValue.charAt(0).toUpperCase() + trimmedValue.slice(1)}`);

// Проверьте, включает ли строка .com или .ru. Выведите true или false.

const mail = 'example.com';
mail.includes('.com') || val_for_array.includes('.ru') ? console.log('Результат: true') : console.log('Результат: false');

// Замените все @ на ! в строке.

const replace = 'user@domain.com';
console.log(`Входные: ${replace} → Результат: ${replace.replaceAll('@', '!')}`);

// Найдите индекс первого вхождения в строке "aaa bbb ccc" слова "bbb".

const str = 'aaa bbb ccc';
console.log(`Результат первого вхождения в строке "aaa bbb ccc: ${str.indexOf('bbb')}`);

// Найдите индекс последнего вхождения в строке "aaa bbb ccc" слова "bbb".

console.log(`Результат последнего вхождения в строке aaa bbb ccc: ${str.lastIndexOf('bbb')}`);

// Вырежьте из строки "aaa bbb ccc" слово "bbb".

console.log(`Результат: ${str.replace('bbb', '')}`);

// Преобразуйте дату из формата "xxxx-xx-xx" в "xx/xx/xxxx".

const date_val = '2024-08-13';
console.log(`Входные: "${date_val}" → Результат: "${date_val.split('-').reverse().join('-')}"`);

// Пользователь вводит строку. Удалите лишние пробелы, приведите все символы к нижнему
// регистру и повторите строку трижды.

console.log(`Результат: ${str_val.trim().toLowerCase().repeat(3)}`);

// Дана строка из слов, разделенных пробелом. Определите количество слов с строке.
// Входные: "hello world" → Результат: 2
// Входные: "JavaScript is awesome" → Результат: 3

const split_val = str_val.split(' ');
console.log(`количество слов с строке: ${split_val.length}`);

// Дана строка из трех слов, разделенных пробелом. Вырежьте 2-е и 3-е слова.

console.log(split_val[0]);

// Пользователь вводит дату в формате 'х-х-х'. Замените все дефисы на !.

console.log(`Замените все дефисы на !: ${date_val.replace('-', '!')}`);

// Преобразуйте дату из формата 'xxxx-xx-xx' в 'xx.xx.xxxx'.

console.log(date_val.split('-').reverse().join('.'));

// Дан статичный массив ['я', 'учу', 'javascript', '!']. Преобразуйте его в строку 'я+учу+javascript+!' с
// помощью метода join.

console.log(`${str_val.split().join('+')}`);

// На вход подается строка, состоящая из имени и фамилии, разделенных пробелом. Проверьте, что
// имя и фамилия начинаются с заглавной буквы.

value_name[0].toUpperCase() && value_surname[0].toUpperCase() ? console.log('имя и фамилия начинаются с заглавной буквы.') : console.log('имя и фамилия не начинаются с заглавной буквы.');

// На вход подается строка. Определите, является ли строка хорошей. Строка считается хорошей,
// если в ней присутствует подстрока «хорош» в любом регистре.

const good_val = 'я очень хороший текст';
good_val.toLowerCase().includes('хорош') ? console.log(`Хороший текст`) : console.log(`Не хороший текст`);

// Пользователь вводит слово. Преобразуйте его в хештег. Проверка: строка должна состоять только
// из текста.

console.log(`#${val_for_array.trim().toLowerCase()}`);

// Проверка слова на палиндром. Если слово читается одинаково с обеих сторон, выведите true,
// иначе false.

const palindrom = 'мем';
palindrom === palindrom.split('').reverse().join('') ? console.log(`Слово палиндром`) : console.log(`Слово не палиндром`);

// На вход подается строка, содержащая символы @. Удалите все вхождения символа @ из строки.

console.log(replace.replace('@', ''));

// Пользователь вводит строковое значение. Если число больше 2 и меньше 11 или больше/равно 26
// и меньше 30, выведите "Верно", иначе "Неверно".

const num = '5';
Number(num) > 2 && Number(num) < 11 || Number(num) >= 26 && Number(num) < 30 ? console.log(`${num} - верно`) : console.log(`${num} - не верно`);

// На вход подается строка, представляющая электронную почту. Если строка содержит символ @ и
// заканчивается на .com или .ru, выведите true, иначе false.

replace.includes('@') && replace.endsWith('.com') || replace.endsWith('.ru') ? console.log('true') : console.log('false');

// На вход подается строка с числами, разделенными запятыми, например, "1,2,3,4,5". Преобразуйте
// строку к массиву чисел не учитывая запятые.

const str_with_num = '1,2,3,4,5';
console.log(str_with_num.replaceAll(',', '').split(''));

// Пользователь вводит строку и число n. Повторите строку n раз.

console.log(palindrom.repeat(Number(num)));

// На вход подается строка, представляющая URL, например, "http://example.com". Убедитесь, что URL
// начинается с http:// или https://.

const url = "http://example.com".split('//');

url[0] == 'http:' || url[0] == 'https:' ? console.log('Результат: true') : console.log('Результат: false');

// Пользователь вводит строку, состоящую из слов разделенных пробелами.
// Преобразуйте каждое слово так, чтобы первая буква была строчной, а остальные — заглавными.

let trim_val = good_val.trim();

!isNaN(trim_val) ? console.log("Ошибка ввода")
    : console.log(`Результат: ${trim_val.charAt(0).toLowerCase() + trim_val.slice(1).toUpperCase()}`);

// Пользователь вводит строку и символ. Убедитесь, что данный символ не присутствует в строке.

const string_for_includes = 'world';
const symbol_to_str = 'o';

string_for_includes.includes(symbol_to_str) ? console.log(`Результат: ${string_for_includes.indexOf(symbol_to_str)}`) : console.log(`Символ не найден`);

// Создайте два “symbol” с одинаковым описанием и сравните их. Выведите результат сравнения в
// консоль.

const sym1 = Symbol('pets');
const sym2 = Symbol('pets');

console.log(`sym1: ${sym1.toString()}, sym2: ${sym2.toString()}, сравнение: ${sym1 === sym2}`);

// Создайте символ с описанием и проверьте тип созданной переменной. Убедитесь, что она имеет
// тип "symbol".

console.log(typeof (sym1));

// На вход подается строка, содержащая несколько предложений. Напишите программу, которая
// подсчитывает количество предложений в строке. (Предложение содержит только точки)

const text = "Hello. How are you. I'm fine.";
console.log(text.split('.').length - 1);

// На вход подается строка в формате пути, например '/home/user/dir/file.txt'. Необходимо извлечь и
// вернуть имя файла, то есть подстроку после последнего символа /.

const way = '/home/user/dir/file.txt';
console.log(way.split('/').reverse()[0]);
